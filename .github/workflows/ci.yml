name: build

on:
  push:
    branches: [ main, release-11.5.x, release-11.1.x, release-11.0.x ]
    tags:
      - "**"
  pull_request:
    branches: [ main, release-11.5.x, release-11.1.x, release-11.0.x ]

env:
  LOCAL_IMAGE_NAME: 'solrci-image:latest'
  LOCAL_CONTAINER_NAME: 'solrci-container'
  TESTING_SOLR_PORT: 8983
  LOCAL_VOLUME_NAME: 'solrci-volume'
  LOCAL_VOLUME_PATH: '/ramfs/data-solr'

  CI_BUILD_DIRECTORY: '/ramfs/data-build'

jobs:
  ci_build_docker:
    runs-on: ubuntu-latest
    steps:
      # Workaround for issue with actions/checkout@v2 wrong PR commit checkout: See https://github.com/actions/checkout/issues/299#issuecomment-677674415
      -
        name: Checkout current state of Pull Request
        if: github.event_name == 'pull_request'
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      -
        name: Checkout current state of Branch
        if: github.event_name == 'push'
        uses: actions/checkout@v2
      # End: Workaround for issue with actions/checkout@v2 wrong PR commit checkout
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Docker/SolrServer/Dockerfile
          tags: solrci-image:latest
          outputs: type=docker,dest=/tmp/solrci-image.tar
      -
        name: Test Image
        run: |
          pwd
          ls -la ../
          docker load --input /tmp/solrci-image.tar
          docker image ls -a
          ./Build/Test/cibuild_docker.sh
      -
        name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: solrci-image
          path: /tmp/solrci-image.tar

  tests:
    runs-on: ubuntu-latest
    needs: ci_build_docker
    strategy:
      matrix:
        PHP: [ '7.4' ]
        TYPO3: [ '10', '10.4.x-dev' ]
    env:
      TYPO3_DATABASE_NAME: 'typo3_ci'
      TYPO3_DATABASE_HOST: '127.0.0.1'
      TYPO3_DATABASE_USERNAME: 'root'
      TYPO3_DATABASE_PASSWORD: 'root'
      PHP_CS_FIXER_VERSION: '^2.16.1'
      TYPO3_VERSION: ${{ matrix.TYPO3 }}

    name: TYPO3 ${{ matrix.TYPO3 }} on PHP ${{ matrix.PHP }}
    steps:
      # Workaround for issue with actions/checkout@v2 wrong PR commit checkout: See https://github.com/actions/checkout/issues/299#issuecomment-677674415
      -
        name: Checkout current state of Pull Request
        if: github.event_name == 'pull_request'
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      -
        name: Checkout current state of Branch
        if: github.event_name == 'push'
        uses: actions/checkout@v2
      # End: Workaround for issue with actions/checkout@v2 wrong PR commit checkout
      -
        name: Mount RAMFS
        run: |
          id
          sudo mkdir /ramfs
          sudo mount -t tmpfs -o size=2048m none /ramfs
          sudo mkdir -p /ramfs/data-{solr,mysql,build} && sudo chown $USER /ramfs/data-* && sudo chown 8983:8983 /ramfs/data-solr
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Download solrci-image from "ci_build_docker" job
        uses: actions/download-artifact@v2
        with:
          name: solrci-image
          path: /tmp
      -
        name: 'Start Docker: Solr, MySQL'
        run: |
          docker load --input /tmp/solrci-image.tar
          docker run --name "MySQL-CI" -v /ramfs/data-mysql:/var/lib/mysql -p 3306:3306 \
            -e MYSQL_DATABASE=$TYPO3_DATABASE_NAME \
            -e MYSQL_ROOT_PASSWORD=$TYPO3_DATABASE_PASSWORD \
            -d mysql:8.0 mysqld --default-authentication-plugin=mysql_native_password
          sudo chmod g+w "$LOCAL_VOLUME_PATH"
          docker volume create --name "$LOCAL_VOLUME_NAME" --opt type=none --opt device="$LOCAL_VOLUME_PATH" --opt o=bind
          docker run --rm --name="$LOCAL_CONTAINER_NAME" -d -p 127.0.0.1:8983:8983 -v "$LOCAL_VOLUME_NAME":"/var/solr" "$LOCAL_IMAGE_NAME"
          docker ps
          rm /tmp/solrci-image.tar
      -
        name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.PHP }}
          coverage: xdebug
          tools: composer:v2
      -
       name: Move sources to RAMFS
       run: |
         cp -r ../ext-solr $CI_BUILD_DIRECTORY/.
      -
        name: Resolve CI build cache key
        run: |
          export CURRENT_TYPO3_VERSION_REFERNCE=$(./Build/Helpers/TYPO3_SOURCE_REFERENCE.sh "$TYPO3_VERSION" --short)
          export CI_BUILD_CACHE_KEY=${{ runner.os }}-2021.10.15_20:57_TYPO3:$TYPO3_VERSION:$CURRENT_TYPO3_VERSION_REFERNCE-PHP:${{ matrix.PHP }}
          echo "CI_BUILD_CACHE_KEY=$CI_BUILD_CACHE_KEY" >> $GITHUB_ENV
          echo "The key for actions/cache@v2 is \"$CI_BUILD_CACHE_KEY\""
      -
        name: Restore ci build caches
        id: restore_ci_build_caches
        uses: actions/cache@v2
        with:
          path: |
            $CI_BUILD_DIRECTORY/ext-solr/.Build
            !$CI_BUILD_DIRECTORY/ext-solr/.Build/Web/typo3temp/assets
            !$CI_BUILD_DIRECTORY/ext-solr/.Build/Web/typo3temp/var
          key: ${{ env.CI_BUILD_CACHE_KEY }}
      -
        name: CI-Bootstrap
        if: steps.restore_ci_build_caches.outputs.cache-hit != 'true'
        run: |
          cd $CI_BUILD_DIRECTORY/ext-solr
          ./Build/Test/bootstrap.sh --skip-solr-install
          echo "Current Size of EXT:Solr build Artefacts: " && du -sh $CI_BUILD_DIRECTORY/ext-solr
      -
        name: CI-Build
        run: |
          cd $CI_BUILD_DIRECTORY/ext-solr
          ./Build/Test/cibuild.sh
          echo "Current Size of EXT:Solr build Artefacts: " && du -sh $CI_BUILD_DIRECTORY/ && du -sh $CI_BUILD_DIRECTORY/*

  publish:
    name: Publish new version to TER
    needs: tests
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-20.04
    env:
      TYPO3_API_TOKEN: ${{ secrets.TYPO3_API_TOKEN }}
    steps:
      -
        name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      -
        name: Check tag
        run: |
          if ! [[ ${{ github.ref }} =~ ^refs/tags/[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}$ ]]; then
            exit 1
          fi
      -
        name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
          extensions: intl, mbstring, json, zip, curl
          tools: composer:v2
      -
        name: Install tailor
        run: composer global require typo3/tailor --prefer-dist --no-progress

      -
        name: Publish EXT:solr to TER
        run: |
          export RELEASE_VERSION=${GITHUB_REF/refs\/tags\//}
          export TER_COMMENT=$(git tag -n99 -l "$RELEASE_VERSION" | sed "s/^[0-9.]*[ ]*//g")
          if [[ -z "${TER_COMMENT// }" ]]; then
            export TER_COMMENT="Released version $RELEASE_VERSION of EXT:solr"
          fi
          echo "Following message will be printed in TER as release description:"
          echo -e "$TER_COMMENT"
          php ~/.composer/vendor/bin/tailor ter:publish --comment "$TER_COMMENT" "$RELEASE_VERSION"
